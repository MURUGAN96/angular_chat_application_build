{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/DialogFlowclient.ts","webpack:///./src/app/alertComponents/alert.component.html","webpack:///./src/app/alertComponents/alert.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authGuards/auth.guard.ts","webpack:///./src/app/chat/chat.component.css","webpack:///./src/app/chat/chat.component.html","webpack:///./src/app/chat/chat.component.ts","webpack:///./src/app/helpers/error.interceptor.ts","webpack:///./src/app/helpers/fake-backend.ts","webpack:///./src/app/helpers/jwt.interceptor.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/services/alert.service.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { ApiAiClient } from 'api-ai-javascript/es6/ApiAiClient';\nexport const client = new ApiAiClient({accessToken: 'cc2a76a4409b413ba2d2c35a76ae2986'});\n","module.exports = \"<div *ngIf=\\\"message\\\" [ngClass]=\\\"{ 'alert': message,\\n'alert-success': message.type === 'success',\\n 'alert-danger': message.type === 'error' }\\\">{{message.text}}</div>\\n\"","﻿import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n    selector: 'app-alert',\n    templateUrl: 'alert.component.html',\n})\n\nexport class AlertComponent implements OnInit, OnDestroy {\n    private subscription: Subscription;\n    message: any;\n\n    constructor(private alertService: AlertService) { }\n\n    ngOnInit() {\n        this.subscription = this.alertService.getMessage().subscribe(message => {\n            this.message = message;\n        });\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ChatComponent } from './chat/chat.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AuthGuard } from './authGuards/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: ChatComponent, canActivate: [AuthGuard] },\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent },\n    { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".container{\\n  background-color:palegreen;\\n  margin-top: 2%;\\n  padding: 2%\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSwwQkFBMEI7RUFDMUIsY0FBYztFQUNkO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG4gIGJhY2tncm91bmQtY29sb3I6cGFsZWdyZWVuO1xuICBtYXJnaW4tdG9wOiAyJTtcbiAgcGFkZGluZzogMiVcbn1cblxuIl19 */\"","module.exports = \"<!-- Menu -->\\n<nav class=\\\"navbar navbar-expand navbar-dark bg-dark\\\" *ngIf=\\\"currentUser\\\">\\n    <div class=\\\"navbar-nav\\\">\\n        <a class=\\\"nav-item nav-link\\\" (click)=\\\"logout()\\\">Logout</a>\\n    </div>\\n</nav>\\n\\n<!-- main app container -->\\n    <div class=\\\"container\\\">\\n                <app-alert></app-alert>\\n                <router-outlet></router-outlet>\\n    </div>\\n\\n\"","﻿import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Authentication } from './services/authentication.service';\nimport { User } from './models/user';\n\n@Component({\n   selector: 'app-root',\n   templateUrl: 'app.component.html',\n   styleUrls: ['./app.component.css']\n  })\nexport class AppComponent {\n    currentUser: User;\n\n    constructor(\n        private router: Router,\n        private authenticationService: Authentication\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    logout() {\n        this.authenticationService.logout();\n        this.router.navigate(['/login']);\n    }\n}\n","﻿import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpHeaders, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { fakeBackendProvider } from './helpers/fake-backend';\nimport { AppComponent } from './app.component';\nimport { EmojiModule } from 'angular-emoji/dist';\nimport { MaterialModule } from './material/material.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AlertComponent } from './alertComponents/alert.component';\nimport { ErrorInterceptor } from './helpers/error.interceptor';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { ChatComponent } from './chat/chat.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        AppRoutingModule,\n        MaterialModule,\n        EmojiModule\n    ],\n    declarations: [\n        AppComponent,\n        AlertComponent,\n        ChatComponent,\n        LoginComponent,\n        RegisterComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n\n        // provider used to create fake backend\n        fakeBackendProvider\n    ],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","﻿import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Authentication } from '../services/authentication.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: Authentication\n    ) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            return true;\n        } this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n}\n","module.exports = \".example-full-width{\\n  width: 95%;\\n}\\ndiv{\\n  border: 1px solid black;\\n}\\nmat-list{\\n  width: 100%;\\n  overflow: scroll;\\n  height: 250px;\\n}\\nmat-icon{\\n  color:black;\\n  cursor: pointer;\\n}\\nfrom{\\n  position: fixed;\\n  bottom: 0;\\n  left: 33%;\\n}\\nmat-divider{\\n  width: 40%;\\n    margin-left: 28%;\\n}\\n.example-form{\\n  margin-left: 26%;\\n  width: 42%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0FBQ1o7QUFDQTtFQUNFLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixhQUFhO0FBQ2Y7QUFDQTtFQUNFLFdBQVc7RUFDWCxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsU0FBUztFQUNULFNBQVM7QUFDWDtBQUNBO0VBQ0UsVUFBVTtJQUNSLGdCQUFnQjtBQUNwQjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFVBQVU7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2NoYXQvY2hhdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmV4YW1wbGUtZnVsbC13aWR0aHtcbiAgd2lkdGg6IDk1JTtcbn1cbmRpdntcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG59XG5tYXQtbGlzdHtcbiAgd2lkdGg6IDEwMCU7XG4gIG92ZXJmbG93OiBzY3JvbGw7XG4gIGhlaWdodDogMjUwcHg7XG59XG5tYXQtaWNvbntcbiAgY29sb3I6YmxhY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbmZyb217XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAzMyU7XG59XG5tYXQtZGl2aWRlcntcbiAgd2lkdGg6IDQwJTtcbiAgICBtYXJnaW4tbGVmdDogMjglO1xufVxuLmV4YW1wbGUtZm9ybXtcbiAgbWFyZ2luLWxlZnQ6IDI2JTtcbiAgd2lkdGg6IDQyJTtcbn1cbiJdfQ== */\"","module.exports = \"  <h2>Welcome to chat {{currentUser.firstName}} </h2>\\n  <h3>Accomdated users in this chat</h3>\\n  <ul>\\n    <li *ngFor=\\\"let user of users\\\">\\n        ({{user.firstName}} {{user.lastName}})\\n        - <a (click)=\\\"removeUser(user.id)\\\" class=\\\"text-danger\\\">Block this Person</a>\\n    </li>\\n  </ul>\\n  <div layout=\\\"row\\\" layout-xs=\\\"column\\\">\\n    <div flex>\\n  <mat-list>\\n    <mat-list-item *ngFor=\\\"let message of conversation\\\" >\\n      <mat-icon>{{ message.avatar }}</mat-icon>\\n      <h3 matLine><b>{{ message.from }} </b></h3>\\n      <p matLine>\\n        <span>{{ message.content }}</span>\\n      </p>\\n    </mat-list-item>\\n  </mat-list>\\n  <mat-divider></mat-divider>\\n  <form class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput\\n              #message\\n              maxlength=\\\"150\\\"\\n              placeholder=\\\"Type a message\\\"\\n              (keyup.enter)=\\\"addMessageFromUser(message)\\\">\\n              <mat-icon (click)=\\\"addMessageFromUser(message)\\\"></mat-icon>\\n    </mat-form-field>\\n  </form>\\n  </div>\\n  </div>\\n\\n\"","﻿import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { IMessage } from '../models/message';\nimport { client } from '../DialogFlowclient';\nimport { User } from '../models/user';\nimport { Authentication } from '../services/authentication.service';\nimport { UserService } from '../services/user.service';\nimport { TextAnalyse } from '../services/data.service';\n\ndeclare var $ :any;\n@Component({\n   templateUrl: 'chat.component.html',\n   styleUrls: ['./chat.component.css']\n  })\nexport class ChatComponent implements OnInit, OnDestroy {\n    currentUser: User;\n    currentUserSubscription: Subscription;\n    users: User[] = [];\n    conversation: IMessage[] = [];\n\n    constructor(\n        private authenticationService: Authentication,\n        private userService: UserService,\n        private data: TextAnalyse\n    ) {\n        this.currentUserSubscription = this.authenticationService.currentUser.subscribe(user => {\n            this.currentUser = user;\n        });\n    }\n    addMessageFromUser(message) {\n      $('mat-list').scrollTop($('mat-list')[0].scrollHeight);\n      if ((message.value) == ''){\n        alert('Send some message');\n      }\n      this.data.httpPost(message.value).subscribe(data=>{\n        console.log(JSON.stringify(data));\n      });\n      this.conversation.push({\n        avatar: 'perm_identity',\n        from: '',\n        content: message.value\n      });\n\n      client.textRequest(message.value).then((response) => {\n        this.conversation.push({\n          avatar: 'android',\n          from: 'Dialogflow',\n          content: response.result.fulfillment.speech || 'Sorry try again later'\n        });\n        message.value = '';\n      });\n    }\n\n    ngOnInit() {\n        this.loadAllUsers();\n    }\n\n    ngOnDestroy() {\n        this.currentUserSubscription.unsubscribe();\n    }\n\n    removeUser(id: number) {\n        this.userService.delete(id).pipe(first()).subscribe(() => {\n            this.loadAllUsers()\n        });\n    }\n\n    private loadAllUsers() {\n        this.userService.getAll().pipe(first()).subscribe(users => {\n            this.users = users;\n        });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Authentication } from '../services/authentication.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: Authentication) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if (err.status === 401)\n            {\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}\n","﻿import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n\n    constructor() { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let users: any[] = JSON.parse(localStorage.getItem('users')) || [];\n        return of(null).pipe(mergeMap(() => {\n\n            if (request.url.endsWith('/users/authenticate') && request.method === 'POST') {\n                let filteredUsers = users.filter(user => {\n                    return user.username === request.body.username && user.password === request.body.password;\n                });\n\n                if (filteredUsers.length) {\n                    let user = filteredUsers[0];\n                    let body = {\n                        id: user.id,\n                        username: user.username,\n                        firstName: user.firstName,\n                        lastName: user.lastName,\n                        token: 'fake-jwt-token'\n                    };\n                    return of(new HttpResponse({ status: 200, body: body }));\n                } else {\n                    return throwError({ error: { message: 'Username or password is incorrect' } });\n                }\n            }\n            if (request.url.endsWith('/users') && request.method === 'GET') {\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                    return of(new HttpResponse({ status: 200, body: users }));\n                } else {\n                    return throwError({ status: 401, error: { message: 'Unauthorised' } });\n                }\n            }\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'GET') {\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                     let urlParts = request.url.split('/');\n                    let id = parseInt(urlParts[urlParts.length - 1]);\n                    let matchedUsers = users.filter(user => user.id === id);\n                    let user = matchedUsers.length ? matchedUsers[0] : null;\n\n                    return of(new HttpResponse({ status: 200, body: user }));\n                } else {\n                    return throwError({ status: 401, error: { message: 'Unauthorised' } });\n                }\n            }\n\n            if (request.url.endsWith('/users/register') && request.method === 'POST') {\n                let newUser = request.body;\n                let duplicateUser = users.filter(user => { return user.username === newUser.username; }).length;\n                if (duplicateUser) {\n                    return throwError({ error: { message: 'Username \"' + newUser.username + '\" is already taken' } });\n                }\n                newUser.id = users.length + 1;\n                users.push(newUser);\n                localStorage.setItem('users', JSON.stringify(users));\n                return of(new HttpResponse({ status: 200 }));\n            }\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'DELETE') {\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\n                   let urlParts = request.url.split('/');\n                    let id = parseInt(urlParts[urlParts.length - 1]);\n                    for (let i = 0; i < users.length; i++) {\n                        let user = users[i];\n                        if (user.id === id) {\n                            users.splice(i, 1);\n                            localStorage.setItem('users', JSON.stringify(users));\n                            break;\n                        }\n                    }\n                    return of(new HttpResponse({ status: 200 }));\n                } else {\n                    return throwError({ status: 401, error: { message: 'Unauthorised' } });\n                }\n            }\n            return next.handle(request);\n\n        }))\n        .pipe(materialize())\n        .pipe(delay(500))\n        .pipe(dematerialize());\n    }\n}\n\nexport let fakeBackendProvider = {\n     provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Authentication } from '../services/authentication.service';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: Authentication) {}\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let currentUser = this.authenticationService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n        return next.handle(request);\n    }\n}\n","module.exports = \"/* Login component css */\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx3QkFBd0IiLCJmaWxlIjoic3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogTG9naW4gY29tcG9uZW50IGNzcyAqL1xuIl19 */\"","module.exports = \"<!--\\n  Login form\\n-->\\n\\n<h2>Login</h2>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Login</button>\\n             <a routerLink=\\\"/register\\\" class=\\\"btn btn-link\\\">Register</a>\\n    </div>\\n</form>\\n\"","﻿import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Authentication } from '../services/authentication.service';\nimport { AlertService } from '../services/alert.service';\n\n@Component({\n  templateUrl: 'login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: Authentication,\n        private alertService: AlertService\n    ) {\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n        if (this.loginForm.invalid)\n        {\n          return;\n        }\n        this.loading = true;\n        this.authenticationService.login(this.f.username.value, this.f.password.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatIconModule, MatInputModule, MatListModule } from '@angular/material';\n\n\n@NgModule({\n  declarations: [],\n  imports: [BrowserAnimationsModule, MatIconModule, MatInputModule, MatListModule],\n  exports: [BrowserAnimationsModule, MatIconModule, MatInputModule, MatListModule]\n})\nexport class MaterialModule { }\n","module.exports = \"/* register component css*/\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwwQkFBMEIiLCJmaWxlIjoic3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogcmVnaXN0ZXIgY29tcG9uZW50IGNzcyovXG4iXX0= */\"","module.exports = \"<!--\\n  Registration form with validation\\n-->\\n<h2>Register</h2>\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"firstName\\\">First Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"lastName\\\">Last Name</label>\\n        <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n          </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"username\\\">Username</label>\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.username.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"password\\\">Password</label>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n        <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n            <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <button [disabled]=\\\"loading\\\" class=\\\"btn btn-primary\\\">Register</button>\\n        <a routerLink=\\\"/login\\\" class=\\\"btn btn-link\\\">Login</a>\\n    </div>\\n</form>\\n\"","﻿import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Authentication } from '../services/authentication.service';\nimport { AlertService } from '../services/alert.service';\nimport { UserService } from '../services/user.service';\n\n\n@Component({\n  templateUrl: 'register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n    registerForm: FormGroup;\n    loading = false;\n    submitted = false;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private authenticationService: Authentication,\n        private userService: UserService,\n        private alertService: AlertService\n    ) {\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            firstName: ['', [Validators.required, Validators.maxLength(12)]],\n            lastName: ['', [Validators.required, Validators.maxLength(12)]],\n            username: ['', Validators.required],\n            password: ['', [Validators.required, Validators.minLength(6)]]\n        });\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n        if (this.registerForm.invalid) {\n            return;\n        }\n        this.loading = true;\n        this.userService.register(this.registerForm.value)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    this.alertService.success('Registration completed successfully.', true);\n                    this.router.navigate(['/login']);\n                },\n                error => {\n                    this.alertService.error(error);\n                    this.loading = false;\n                });\n    }\n}\n","﻿import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<any>();\n    private changeAfterNav = false;\n\n    constructor(private router: Router) {\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.changeAfterNav) {\n                    this.changeAfterNav = false;\n                } else {\n                    this.subject.next();\n                }\n            }\n        });\n    }\n    success(message: string, changeAfterNav = false) {\n        this.changeAfterNav = changeAfterNav;\n        this.subject.next({ type: 'success', text: message });\n    }\n    error(message: string, changeAfterNav = false) {\n        this.changeAfterNav = changeAfterNav;\n        this.subject.next({ type: 'error', text: message });\n    }\n    getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}\n","﻿import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { environment } from '@environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({ providedIn: 'root' })\nexport class Authentication {\n    private currentUserSubject: BehaviorSubject<User>;\n    public currentUser: Observable<User>;\n\n    constructor(private http: HttpClient) {\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): User {\n        return this.currentUserSubject.value;\n    }\n    login(username: string, password: string) {\n      console.log({ username, password });\n        return this.http.post<any>(`${environment.apiUrl}/users/authenticate`, { username, password })\n            .pipe(map(user => {\n               //login at the session\n                if (user && user.token) { localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                }\n                return user;\n            }));\n    }\n    logout() {\n        //logout from session\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\n@Injectable({ providedIn: 'root' })\nexport class TextAnalyse {\n\n  reqUrl = 'https://api.aylien.com/api/v1/sentiment';\n    constructor(private http: HttpClient) {}\n    private setHeaders(): HttpHeaders {\n      const headersConfig = {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'X-AYLIEN-TextAPI-Application-Key': '0c26e88cba2755643170c120bd4ce3c0',\n        'X-AYLIEN-TextAPI-Application-ID': '8a70e48c'\n      };\n      return new HttpHeaders(headersConfig);\n    }\n\n    public httpPost(data){\n    let tempInfo = [];\n    tempInfo['text'] = data;\n    tempInfo['mode'] = 'document';\n\n\n    return this.http.post(this.reqUrl, tempInfo, {\n      headers: this.setHeaders(),\n      withCredentials: true\n    });\n  }\n\n}\n","﻿import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../models/user';\n\n@Injectable({ providedIn: 'root' })\n\nexport class UserService {\n    constructor(private http: HttpClient) { }\n    getAll() {\n      return this.http.get<User[]>(`/users`);\n  }\n  getById(id: number) {\n      return this.http.get(`/users/` + id);\n  }\n  register(user: User) {\n      return this.http.post(`/users/register`, user);\n  }\n  update(user: User) {\n      return this.http.put(`/users/` + user.id, user);\n  }\n  delete(id: number) {\n      return this.http.delete(`/users/` + id);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}